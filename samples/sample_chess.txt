GAME chess

DEFINE chess:
    BOARD (8,8,checker)
    PLAYERS (white, black)
    PIECES (pawn, rook, knight, bishop, queen, king)
    OBSTACLES (NONE)
    BOOSTERS (NONE)
    CONDITIONS (ANY)
    RULES (ALL)
    TIMER(1800)
END

DEFINE chess.PLAYERS:
    PLAYER white COLOR COLOR.white AT BOARD.ROW.1
    PLAYER black COLOR COLOR.black AT BOARD.ROW.8
    ORDER ([white, black])
END

DEFINE chess.CONDITIONS:
    CONDITION (white.king.COUNT == 0)
    CONDITION (black.king.COUNT == 0)
    CONDITION (TIMER.timer_running == True)
END

DEFINE chess.RULES:
    RULE (name = promote_rule_white, pos_check = True, row = 8, piece = pawn, color = white, action = convert, convert_to = queen)
    RULE (name = promote_rule_black, pos_check = True, row = 1, piece = regular, color = black, action = convert, convert_to = queen)
END

DEFINE chess.PIECES:
    PIECE pawn COUNT 8
    PIECE knight COUNT 2
    PIECE bishop COUNT 2
    PIECE rook COUNT 2
    PIECE queen COUNT 1
    PIECE king COUNT 1

    PIECE pawn ACTION (name = move, direction = forward, min_count = 1, max_count = 1, skip = False, across = False, backtrack = False, consume = False)
    PIECE pawn ACTION (name = consume, direction = diagonal, min_count = 1, max_count = 1, skip = False, across = False, backtrack = False, consume = True)

    PIECE rook ACTION (name = move, direction = orthogonal, min_count = 1, skip = False, across = True, backtrack = False, consume = False)
    PIECE rook ACTION (name = consume, direction = orthogonal, min_count = 1, skip = False, across = True, backtrack = False, consume = True)

    PIECE knight ACTION (name = move, custom_movement = ["NNW", "NNE", "SSW", "SSE", "EEN", "EES", "WWN", "WWS"], consume = False)
    PIECE knight ACTION (name = consume, custom_movement = ["NNW", "NNE", "SSW", "SSE", "EEN", "EES", "WWN", "WWS"], consume = True)

    PIECE bishop ACTION (name = move, direction = diagonal, min_count = 1, skip = False, across = True, backtrack = True, consume = False)
    PIECE bishop ACTION (name = consume, direction = diagonal, min_count = 1, skip = False, across = True, backtrack = True, consume = True)

    PIECE queen ACTION (name = move, direction = adjacent, min_count = 1, skip = False, across = True, backtrack = True, consume = False)
    PIECE queen ACTION (name = consume, direction = adjacent, min_count = 1, skip = False, across = True, backtrack = True, consume = True)

    PIECE king ACTION (name = move, direction = adjacent, min_count = 1, max_count = 1, skip = False, across = False, backtrack = False, consume = False)
    PIECE king ACTION (name = consume, direction = adjacent, min_count = 1, max_count = 1, skip = False, across = False, backtrack = False, consume = True)

END

DEFINE chess.BOARD:
    PLAYER white PIECE pawn SETUP (BOARD.B1 ... BOARD.B8)
    PLAYER white PIECE king SETUP (BOARD.A1, BOARD.H1)
    PLAYER white PIECE knight SETUP (BOARD.B1, BOARD.G1)
    PLAYER white PIECE bishop SETUP (BOARD.C1, BOARD.F1)
    PLAYER white PIECE queen SETUP (BOARD.D1)
    PLAYER white PIECE king SETUP (BOARD.E1)

    PLAYER black PIECE pawn SETUP (BOARD.A7 ... BOARD.H7)
    PLAYER black PIECE rook SETUP (BOARD.A8, BOARD.H8)
    PLAYER black PIECE knight SETUP (BOARD.B8, BOARD.G8)
    PLAYER black PIECE bishop SETUP (BOARD.C8, BOARD.F8)
    PLAYER black PIECE queen SETUP (BOARD.D8)
    PLAYER black PIECE king SETUP (BOARD.E8)
END

START:
    TURN white
    MOVE pawn TO BOARD.E3
END